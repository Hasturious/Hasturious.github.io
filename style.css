/*"Zen Garden" invokes a feeling of nature, peace, and order. This design uses colors assiociated with nature and thin but firm lines*/

@import url('https://fonts.googleapis.com/css2?family=Electrolize&family=Oswald:wght@200..700&family=Quantico&family=Roboto&family=Zen+Loop:ital@0;1&family=Zen+Tokyo+Zoo&display=swap');

#css-zen-garden {
    background-color: rgb(185, 185, 146); /*sets the background for the entire page*/
    font-family: "Quantico", sans-serif; /*declares the different fonts that will be used in the page*/
}

.page-wrapper {
    display: grid; /*This turns the container into a grid*/
    grid-template-areas: /*These define the spaces within a 6x3 grid with banner banner... taking the entire top row main main... right right taking shares the 2nd row with 2 columns and footer... like the header taking the whole row*/
      'banner banner banner banner banner banner'
      'main main main main right right'
      'footer footer footer footer footer footer';
    gap: 10px; /*applies a 10px gap between the rows and columns of a grid*/
}

.intro{
    grid-area: banner; /*Assigns this area to the banner grid area above*/
    text-align: center; /*centers the text within the grid*/
    margin: auto; /*centers the class within the container*/
    border-bottom: 8px rgb(68, 78, 66) groove; /*creates a line at the bottom of the box*/
}

[role="banner"] { /*[role="X"] is a selector type*/
    width: 30vw; /*the width is now 30% of the view port*/
    background-color: rgb(234, 189, 122); /*the selector is this background color*/
    border: 8px rgb(68, 78, 66) groove; /*draws a 4 sided grooved border around the selector*/
    margin: auto; /*centers the class within the container*/
}

#zen-supporting {
    grid-area: main; /*Assigns this area to he main grid area above*/
    width: 60em; /*assigns the width of the ID*/
    margin: auto; /*centers the class within the container*/
    border-left: 4px ridge #f5ff97; /*adds a thin line on the left side ID*/
    padding: 3em; /*The space between the borders of the container content is 3x the fontsize*/
}


.summary {
    border-bottom: 4px ridge #f5ff97; /*Gives the summary an underline*/
    width: 30vw; /*Sets the border to the same as the banner by using 30% of the viewport*/
    margin: auto; /*centers the class*/
}

#zen-supporting::before {
    margin: auto; /*centers the div*/
    content: ""; /*without this the psuedo element would show no content. Not sure why this works but stackoverflow got me*/
    display: block;
    background-image: url("image/zenflower.jpg");
    background-size: contain; /* Ensures the image is scaled to fit within the element */
    background-repeat: no-repeat; /* Prevents the image from repeating */
    background-position: center; /* Centers the image */
    width: 32em; /* Sets the width of the pseudo-element */
    height: 20em; /* Sets a fixed height for the pseudo-element */
    border: 8px rgb(68, 78, 66) groove; /*draws a 4 sided grooved border around the selector*/
}


.sidebar {
    margin-top: 6em; /*Adds spacing from the top of the container from the intro class above*/
    grid-area: right; /*Assigns this area to the right grid area above*/
    flex: 1; /* Takes up 1/3 of the space */
    padding: 2rem; /*the padding from the content within the sidebar*/
    background-color: #e0e0e0; /*sets the background color*/
    border: 4px ridge #f5ff97; /*sets the border style*/
    height: fit-content; /*the hieght of the class is now dictated by the elements within the class*/
    width: 10em; /*Sets thee width of the aside*/
    margin-right: 50px; /*There margin on the right of the container is bigger*/
}

footer {
    grid-area: footer; /*Assigns this area to he footer grid area above*/
    position: absolute; /*Declares the selector postion as absolute so other containers do not interfere with it*/
    background-color: rgb(234, 189, 122);  /*sets the background color*/
    padding-top: 1em;
    left: 0; /*centers the footer*/
    right: 0; /*centers the footer*/
    width: auto; /*the width of the element is 100% of the view port*/
    height: 3em; /*the hieght of the element is 3x the fontsize within*/
    text-align: center; /*the text is aligned in the center of its element*/
    word-spacing: 10em;
}

a:hover {
    color: darkblue; /*hovering the mouse over a link will change the font color to a darker blue*/
}

h3 {
    border-bottom: 4px ridge #f5ff97; /*all instances of H3 now have an underline*/
}

.preamble h3 {
    border: none; /*All instances but the first one. This just removes the underline from a specific instance of h3*/
}

/*Below is content in the footer that turns the simple links into icons with hover states*/
/*The code follows a pattern - The first use of the class applies the image and the 2nd use of the class with the hover pseudo-class provides the opacity change*/

.zen-validate-html {
    content: url("image/htmlicon.png"); /*The desired image is linked*/
    display: inline-block; /*inline block lets the element share a line with other elements and adjust the width/hieght*/
    height: 2em; /*the adjusted heigth in this case*/
}

.zen-validate-html:hover {
    opacity: .5; /*lowers the opacity of the image when hovered on*/
}

/*I then go on to repeat the above code but for each seperate class. If the footer had a div within it holding all the classes below I could have probably done something cleaner*/
/*However this unwieldly solution seems to be the best as I do not want the entire footer to lower in opacity when hovered over. Just the Icons*/

.zen-validate-css {
    content: url("image/cssicon.png");
    display: inline-block;
    height: 2em;
}

.zen-validate-css:hover {
    opacity: .5;
}

.zen-license {
    content: url("image/ccicon.png");
    display: inline-block;
    height: 2em;
}

.zen-license:hover {
    opacity: .5;
}

.zen-accessibility {
    content: url("image/acsessicon.png");
    display: inline-block;
    height: 2em;
}

.zen-accessibility:hover {
    opacity: .5;
}

.zen-github {
    content: url("image/githubicon.png");
    display: inline-block;
    height: 2em;
}

.zen-github:hover {
    opacity: .5;
}